//------------------------------------------------------------------
// EasyLanguage Code for Tradestation / MultiCharts of ES_H1_no_seesion_BB_portoflio
//
//   Generated by StrategyQuant 3.9.128
//   at 61/04/2019 15:21
//  
//   Backtested on @ES_BC / H1, 2009.01.02 - 2020.03.23 
//
//   Generated for Main chart = Current Symbol / Current TF;
//------------------------------------------------------------------

inputs:
	// Strategy variables
	MagicNumber(11111),
	PriceEntryMult1(0.6),
	BarsValid1(165),
	ReplaceExisting1(true),
	ExitAfterBars1(0),
	ProfitTarget1(140),
	StopLoss1(105),
	BollingerBandsPrd1(88),

	// Trading Options
    
	DontTradeOnWeekends(false),
	FridayCloseTime(0800),
	SundayOpenTime(0800),	
	ExitAtEndOfDay(false),
	DayExitTime(2005),    
	ExitOnFriday(true),
	FridayExitTime(1500),
	LimitSignalsTimeRange(false),
	SignalTimeRangeFrom(0930),
	SignalTimeRangeTo(1255),
	ExitAtEndOfRange(false),
	OrderTypeToExit(0),
	LimitMaxDistanceFromMarket(false),  // Limit max order price distance from market
	MaxDistancePct(0),  // Maximum distance from market price in %
	MaxTradesPerDay(0),
	MinimumSL(0),  // Minimum SL in ticks/pips, 0 means unlimited
	MaximumSL(0),  // Maximum SL in ticks/pips, 0 means unlimited
	MinimumPT(0),  // Minimum PT in ticks/pips, 0 means unlimited
	MaximumPT(0),  // Maximum PT in ticks/pips, 0 means unlimited	
	UseInitialStopLoss(false),  // Sets StopLoss immediately after the order gets filled. Otherwise SL is set on next bar.

	// Money Management - Fixed size
	mmLots(1.0),
    double mmMultiplier(1.0),
	InitialCapital(10000);

vars:
	// Internal variables
	LongEntrySignal(false),
	ShortEntrySignal(false),
	LongExitSignal(false),
	ShortExitSignal(false),
	NumberOfShares(0),
	tickSize(MinMove/PriceScale),
	OpenOrdersAllowed(true),
	IntPriceLevel(0),IntLongSL(0),IntShortSL(0),IntPT(0),
	IntLongTS(0),IntShortTS(0),
	IntLongBE(0),IntShortBE(0),
	LongSLPlaced(false),ShortSLPlaced(false),
   OrderSize(0),
   RemainingSize(0),
   ATMExitPrice(0);

	Array: bool cond[100](false);
   


// =================================================================
// TRADING OPTIONS LOGIC
// =================================================================
OpenOrdersAllowed = true;

// Dont trade on weekends
if DontTradeOnWeekends then begin
	if DayOfWeek(Date) = 5 then begin
		if FridayCloseTime <> 0000 and Time >= FridayCloseTime then begin
			OpenOrdersAllowed = False;
		end;	
	end
	else if DayOfWeek(Date) = 6 then begin
		OpenOrdersAllowed = False;
	end
	else if DayOfWeek(Date) = 0 and Time < SundayOpenTime then begin
		OpenOrdersAllowed = False;
	end; 
end;

// Exit on close (end of day)
if(ExitAtEndOfDay) then begin
	if DayExitTime <> 0000 and Time >= DayExitTime then begin
		if (MarketPosition > 0) then Sell("ExitEndOfDayL") This Bar On Close;
		if (MarketPosition < 0) then BuyToCover("ExitEndOfDayS") This Bar On Close;
		OpenOrdersAllowed = False;
	end
	else SetExitOnClose;
end;

// Exit on Friday
if ExitOnFriday then begin
	if DayOfWeek(Date) = 5 then begin
		if FridayExitTime <> 0000 and Time >= FridayExitTime then begin
			if (MarketPosition > 0) then Sell("ExitFridayL") This Bar On Close;
			if (MarketPosition < 0) then BuyToCover("ExitFridayS") This Bar On Close;
			OpenOrdersAllowed = False;
		end
		else SetExitOnClose;
	end
	else if DayOfWeek(Date) = 6 then begin
		OpenOrdersAllowed = False;
	end; 
end;

// Limit time range
if(OpenOrdersAllowed = True and LimitSignalsTimeRange = True and ((SignalTimeRangeFrom < SignalTimeRangeTo and (Time < SignalTimeRangeFrom or Time >= SignalTimeRangeTo)) or 
									   (SignalTimeRangeFrom >= SignalTimeRangeTo and (Time < SignalTimeRangeFrom and Time >= SignalTimeRangeTo)))
) then OpenOrdersAllowed = False;

// Max trades per day
if(OpenOrdersAllowed = True and MaxTradesPerDay <> 0 and EntriesToday(Date) >= MaxTradesPerDay) then
	OpenOrdersAllowed = False;    
    

	
// =================================================================
// TRADING RULES LOGIC
// =================================================================
               
//------------------------------------------------------------------
// Rule: Trading signals
//------------------------------------------------------------------
LongEntrySignal = true;


ShortEntrySignal = true;


LongExitSignal = false;


ShortExitSignal = false;




                
//------------------------------------------------------------------
// Rule: Long entry
//------------------------------------------------------------------
if LongEntrySignal

then begin
	// Action #1
	if(OpenOrdersAllowed) then begin         
		IntPriceLevel = Round2Fraction((SQ_BollingerBands(Close, BollingerBandsPrd1, 2.1, 0)[2] - (PriceEntryMult1 * SQ_BarRange[1])));
		
		If not LimitMaxDistanceFromMarket or Round(absvalue(IntPriceLevel - CurrentAsk) / CurrentAsk * 100, 2) <= MaxDistancePct Then begin
			NumberOfShares = mmLots * mmMultiplier;
			If NumberOfShares > 0 Then begin
				if(MarketPosition = 0) then  begin
					Buy("LongStop") NumberOfShares shares next bar at IntPriceLevel stop;
			
					If UseInitialStopLoss Then begin
                  IntLongSL = SQ_ConvertToPips(Absvalue( - StopLoss1 * tickSize));
                  If MinimumSL > 0 and IntLongSL < MinimumSL Then IntLongSL = MinimumSL;
                  If MaximumSL > 0 and IntLongSL > MaximumSL Then IntLongSL = MaximumSL;

                  If IntLongSL > 0 Then begin
                     SetStopContract;
                     SetStopLoss((MinMove / PriceScale) * BigPointValue * IntLongSL);
                  end;
                  IntPT = SQ_ConvertToPips(Absvalue( + ProfitTarget1 * tickSize));
                  If MinimumPT > 0 and IntPT < MinimumPT Then IntPT = MinimumPT;
                  If MaximumPT > 0 and IntPT > MaximumPT Then IntPT = MaximumPT;

                  If IntPT > 0 Then begin
                     SetStopContract;
                     SetProfitTarget((MinMove / PriceScale) * BigPointValue * IntPT);
                  end;
					end;
				end;
			end;
		end;
	end;
end;

//------------------------
// Orders Exits (SL, PT, Trailing) for Rule: Long entry 
//------------------------
if(MarketPosition > 0) then begin

	LongSLPlaced = false;

	If BarsSinceEntry(0) = 0 then begin
		IntLongSL = 0;
		IntLongTS = 0;
		IntLongBE = 0;
	end;

	// StopLoss
	IntLongSL = EntryPrice - StopLoss1 * tickSize;
	IntLongSL = SQ_CorrectMinMaxSLPT(IntLongSL, MinimumSL, MaximumSL, true);
	If IntLongSL <> 0 Then begin
		Sell("LongSL") next bar at IntLongSL stop;
		LongSLPlaced = true;
	end Else IntLongSL = 0;

	// ProfitTarget init
	IntPT = EntryPrice + ProfitTarget1 * tickSize;
	IntPT = SQ_CorrectMinMaxSLPT(IntPT, MinimumPT, MaximumPT, false);
	If IntPT < 0 Then IntPT = 0;
	
	// ExitAfterBars
	if (ExitAfterBars1 > 0 and BarsSinceEntry(0) >= ExitAfterBars1) then
		Sell("LongExitAfterXBars") next bar at market;
		
	If IntPT <> 0 then begin 
		Sell("LongPT") next bar at IntPT limit;
	end;
		
	if LongSLPlaced = false and IntLongSL > 0 then begin
		// no SL activated this bar, use default one - handling if there is no SL, only Trailing stop or Move2BE
		Sell("LongSLD") next bar at IntLongSL stop;
	end;	
end;

                
//------------------------------------------------------------------
// Rule: Short entry
//------------------------------------------------------------------
if (ShortEntrySignal and (LongEntrySignal = false))

then begin
	// Action #1
	if(OpenOrdersAllowed) then begin         
		IntPriceLevel = Round2Fraction((SQ_BollingerBands(Close, BollingerBandsPrd1, 2.1, 1)[2] + (PriceEntryMult1 * SQ_BarRange[1])));
		
		If not LimitMaxDistanceFromMarket or Round(absvalue(IntPriceLevel - CurrentBid) / CurrentBid * 100, 2) <= MaxDistancePct Then begin
			NumberOfShares = mmLots * mmMultiplier;
			If NumberOfShares > 0 Then begin
				if(MarketPosition = 0) then  begin
					SellShort("ShortStop") NumberOfShares shares next bar at IntPriceLevel stop;
			
					If UseInitialStopLoss Then begin
                  IntShortSL = SQ_ConvertToPips(Absvalue( + StopLoss1 * tickSize));
                  If MinimumSL > 0 and IntShortSL < MinimumSL Then IntShortSL = MinimumSL;
                  If MaximumSL > 0 and IntShortSL > MaximumSL Then IntShortSL = MaximumSL;

                  If IntShortSL > 0 Then begin
                     SetStopContract;
                     SetStopLoss((MinMove / PriceScale) * BigPointValue * IntShortSL);
                  end;
                  IntPT = SQ_ConvertToPips(Absvalue( - ProfitTarget1 * tickSize));
                  If MinimumPT > 0 and IntPT < MinimumPT Then IntPT = MinimumPT;
                  If MaximumPT > 0 and IntPT > MaximumPT Then IntPT = MaximumPT;

                  If IntPT > 0 Then begin
                     SetStopContract;
                     SetProfitTarget((MinMove / PriceScale) * BigPointValue * IntPT);
                  end;
					end;
				end;
			end;
		end;
	end;
end;

//------------------------
// Orders Exits (SL, PT, Trailing) for Rule: Short entry 
//------------------------
if(MarketPosition < 0) then begin

	ShortSLPlaced = false;

	If BarsSinceEntry(0) = 0 then begin
		IntShortSL = 0;
		IntShortTS = 0;
		IntShortBE = 0;
	end;

	// StopLoss
	IntShortSL = EntryPrice + StopLoss1 * tickSize;
	IntShortSL = SQ_CorrectMinMaxSLPT(IntShortSL, MinimumSL, MaximumSL, true);
	If IntShortSL <> 0 Then begin
		BuyToCover("ShortSL") next bar at IntShortSL stop;
		ShortSLPlaced = true;
	end Else IntShortSL = 0;

	// ProfitTarget init
	IntPT = EntryPrice - ProfitTarget1 * tickSize;
	IntPT = SQ_CorrectMinMaxSLPT(IntPT, MinimumPT, MaximumPT, false);
	If IntPT < 0 Then IntPT = 0;
	
	// ExitAfterBars
	if (ExitAfterBars1 > 0 and BarsSinceEntry(0) >= ExitAfterBars1) then
		BuyToCover("ShortExitAfterXBars") next bar at market;
		
	If IntPT <> 0 then begin 
		BuyToCover("ShortPT") next bar at IntPT limit;
	end;
		
	if ShortSLPlaced = false and IntShortSL > 0 then begin
		// no SL activated this bar, use default one - handling if there is no SL, only Trailing stop or Move2BE
		BuyToCover("ShortSLD") next bar at IntShortSL stop;
	end;	
end;

                
//------------------------------------------------------------------
// Rule: Long exit
//------------------------------------------------------------------
if ((LongExitSignal and (LongEntrySignal = false)) and (MarketPosition > 0))

then begin
	// Action #1
	Sell("ClosePositionLong") next bar at market;
end;


                
//------------------------------------------------------------------
// Rule: Short exit
//------------------------------------------------------------------
if ((ShortExitSignal and (ShortEntrySignal = false)) and (MarketPosition < 0))

then begin
	// Action #1
	BuyToCover("ClosePositionShort") next bar at market;
end;